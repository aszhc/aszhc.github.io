<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>周闖的博客</title>
    <link>https://aszhou.cn/</link>
    <description>Recent content on 周闖的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 03 Jan 2021 14:51:30 +0800</lastBuildDate>
    
	<atom:link href="https://aszhou.cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://aszhou.cn/about/</link>
      <pubDate>Sun, 03 Jan 2021 14:51:30 +0800</pubDate>
      
      <guid>https://aszhou.cn/about/</guid>
      <description>你好 老将行 少年十五二十时，步行夺得胡马骑。 射杀中山白额虎，肯数邺下黄须儿！ 一身转战三千里，一剑曾当百万师。 汉兵奋迅如霹雳，虏骑崩腾畏蒺藜。 卫</description>
    </item>
    
    <item>
      <title>哈希映射和集合练习</title>
      <link>https://aszhou.cn/post/%E5%93%88%E5%B8%8C%E6%98%A0%E5%B0%84%E5%92%8C%E9%9B%86%E5%90%88%E7%BB%83%E4%B9%A0/</link>
      <pubDate>Sat, 09 May 2020 18:19:00 +0800</pubDate>
      
      <guid>https://aszhou.cn/post/%E5%93%88%E5%B8%8C%E6%98%A0%E5%B0%84%E5%92%8C%E9%9B%86%E5%90%88%E7%BB%83%E4%B9%A0/</guid>
      <description>哈希映射和集合练习 1. 有效的字母异位词 给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。 示例 1: 输入: s = &amp;quot;anagram&amp;quot;, t = &amp;quot;nagaram&amp;quot; 输出: true 示例 2: 输</description>
    </item>
    
    <item>
      <title>栈和队列练习题</title>
      <link>https://aszhou.cn/post/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E7%BB%83%E4%B9%A0%E9%A2%98/</link>
      <pubDate>Tue, 05 May 2020 17:32:15 +0800</pubDate>
      
      <guid>https://aszhou.cn/post/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E7%BB%83%E4%B9%A0%E9%A2%98/</guid>
      <description>栈和队列的练习题 1. 有效的括号 给定一个只包括 &amp;lsquo;(&#39;，&#39;)&#39;，&#39;{&#39;，&#39;}&#39;，&#39;[&#39;，&#39;]&amp;rsquo; 的字符串，判断字符串是否有效</description>
    </item>
    
    <item>
      <title>数组、链表练习题</title>
      <link>https://aszhou.cn/post/%E6%95%B0%E7%BB%84%E9%93%BE%E8%A1%A8%E7%BB%83%E4%B9%A0%E9%A2%98/</link>
      <pubDate>Wed, 22 Apr 2020 12:22:13 +0800</pubDate>
      
      <guid>https://aszhou.cn/post/%E6%95%B0%E7%BB%84%E9%93%BE%E8%A1%A8%E7%BB%83%E4%B9%A0%E9%A2%98/</guid>
      <description>数组与链表 Array 实战题目 1. 盛最多水的容器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution: def maxArea(self, height: List[int]) -&amp;gt; int: # 1. 双指针法， 用max_area保存最大值 left_point = 0 right_point = len(height) - 1 max_area</description>
    </item>
    
    <item>
      <title>New</title>
      <link>https://aszhou.cn/tools/new/</link>
      <pubDate>Tue, 07 Apr 2020 16:59:21 +0800</pubDate>
      
      <guid>https://aszhou.cn/tools/new/</guid>
      <description></description>
    </item>
    
    <item>
      <title>递归</title>
      <link>https://aszhou.cn/post/%E9%80%92%E5%BD%92/</link>
      <pubDate>Mon, 02 Mar 2020 13:02:35 +0800</pubDate>
      
      <guid>https://aszhou.cn/post/%E9%80%92%E5%BD%92/</guid>
      <description>To iterate is human, to recurse, divine. 人理解迭代，神理解递归。 什么是递归 递归算法（英语：recursion algorithm）在计算机科学中是指一种通过重复将问题分</description>
    </item>
    
    <item>
      <title>动态规划</title>
      <link>https://aszhou.cn/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
      <pubDate>Sat, 01 Feb 2020 12:56:21 +0800</pubDate>
      
      <guid>https://aszhou.cn/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
      <description>动态规划入门 动态规划(Dynamic programming, 简称DP), 通过把原问题分解为相对简单的子问题的方式求解复杂问题的方法。 DP常常适用于有重叠子问题和最</description>
    </item>
    
    <item>
      <title>接雨水</title>
      <link>https://aszhou.cn/post/%E6%8E%A5%E9%9B%A8%E6%B0%B4/</link>
      <pubDate>Tue, 21 Jan 2020 12:50:59 +0800</pubDate>
      
      <guid>https://aszhou.cn/post/%E6%8E%A5%E9%9B%A8%E6%B0%B4/</guid>
      <description>42. 接雨水 题目描述 给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。 上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://aszhou.cn/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aszhou.cn/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>https://aszhou.cn/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aszhou.cn/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>